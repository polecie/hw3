version: '3.8'

services:
  hw_app:
    container_name: hw_app_cont
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ".env"
    environment:
      CONFIG_FILE: ".env"
    entrypoint: >
      sh -c "
      echo 'Starting application..' &&
      echo 'Running migrations..' &&
      alembic -c src/alembic.ini upgrade head &&
      uvicorn main:app --host 0.0.0.0 --port 8000
      "
    networks:
      - hw_ylab
    ports:
      - "8000:8000"
    depends_on:
      hw_postgres:
        condition: service_healthy
      hw_redis:
        condition: service_healthy

  hw_redis:
    container_name: hw_redis_cont
    image: redis:latest
    environment:
      CONFIG_FILE: ".env"
    expose:
      - 6379
    ports:
      - "9000:6379"
    networks:
      - hw_ylab
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 20s
      retries: 10

  hw_postgres:
    container_name: hw_pgdb_cont
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ".env"
    environment:
      CONFIG_FILE: ".env"
    expose:
      - 5432
    ports:
      - "5432:5432"
    restart: always
    networks:
      - hw_ylab
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 5s
      timeout: 20s
      retries: 100

networks:
  hw_ylab:
    name: hw_ylab

volumes:
  postgres_data:
